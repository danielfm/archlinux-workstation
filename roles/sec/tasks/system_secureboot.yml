- name: Ensure the secure boot keys directory exists
  become: yes
  file:
    path: '{{ system_secure_boot_keys_dir }}'
    state: directory
    owner: root
    group: root
    mode: '0600'

- name: Generate secure boot GUID.txt file
  become: yes
  copy:
    content: '{{ 999999999999999999999 | random | to_uuid }}'
    dest: '{{ system_secure_boot_keys_dir }}/GUID.txt'
    force: no
    owner: root
    group: root
    mode: '0600'

- name: Generate secure boot .key and .crt files
  become: yes
  command:
    chdir: '{{ system_secure_boot_keys_dir }}'
    cmd: 'openssl req -newkey rsa:4096 -nodes -keyout {{ item }}.key -new -x509 -sha256 -days 3650 -subj "/CN=Danielfm Platform Key/" -out {{ item }}.crt'
    creates: '{{ item }}.crt'
  loop:
    - PK
    - KEK
    - db

- name: Generate secure boot .cer files
  become: yes
  command:
    chdir: '{{ system_secure_boot_keys_dir }}'
    cmd: 'openssl x509 -outform DER -in {{ item }}.crt -out {{ item }}.cer'
    creates: '{{ item }}.cer'
  loop:
    - PK
    - KEK
    - db

- name: Generate secure boot .esl files
  become: yes
  command:
    chdir: '{{ system_secure_boot_keys_dir }}'
    cmd: 'cert-to-efi-sig-list -g "$(< GUID.txt)" {{ item }}.crt {{ item }}.esl'
    creates: '{{ item }}.esl'
  loop:
    - PK
    - KEK
    - db

- name: Generate secure boot .auth files
  become: yes
  command:
    chdir: '{{ system_secure_boot_keys_dir }}'
    cmd: 'sign-efi-sig-list -g "$(< GUID.txt)" -k {{ item }}.key -c {{ item }}.crt {{ item }} {{ item }}.esl {{ item }}.auth'
    creates: '{{ item }}.auth'
  loop:
    - PK
    - KEK
    - db

- name: Sign empty file to allow removing the secure boot key when in User Mode
  become: yes
  command:
    chdir: '{{ system_secure_boot_keys_dir }}'
    cmd: sign-efi-sig-list -g "$(< GUID.txt)" -c PK.crt -k PK.key PK /dev/null rm_PK.auth
    creates: rm_PK.auth

- name: Ensure pacman hooks directory exist
  become: yes    
  file:
    path: /etc/pacman.d/hooks
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Add pacman hooks for secure boot signing
  become: yes
  template:
    src: 'etc/pacman.d/hooks/{{ item }}.j2'
    dest: '/etc/pacman.d/hooks/{{ item }}'
    owner: root
    group: root
    mode: '0644'
  loop:
    - 95-secureboot-grub.hook
    - 96-secureboot-linux.hook
    - 97-secureboot-fwupd.hook

- name: Instruct fwupd to use own keys for secure boot
  become: yes
  ini_file:
    path: /etc/fwupd/uefi.conf
    section: uefi
    option: DisableShimForSecureBoot
    value: 'true'
    mode: '0644'
