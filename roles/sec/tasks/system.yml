- name: Set ufw default forward policy
  become: yes
  lineinfile:
    path: /etc/default/ufw
    regex: '^DEFAULT_FORWARD_POLICY='
    line: 'DEFAULT_FORWARD_POLICY="ACCEPT"'

- name: Enable services
  become: yes
  service:
    name: '{{ item }}'
    state: started
    enabled: yes
  loop:
    - parcimonie.sh@all-users
    - pcscd
    - tor
    - ufw

- name: Allow mDNS outgoing traffic
  become: yes
  ufw:
    rule: allow
    port: '5353'
    proto: udp
    direction: out

- name: Allow mDNS incoming traffic
  become: yes
  ufw:
    rule: allow
    port: '5353'
    proto: udp
    direction: in

- name: Allow WHOIS outgoing traffic
  become: yes
  ufw:
    rule: allow
    port: '43'
    proto: tcp
    direction: out

- name: Allow NTP incoming/outgoing traffic
  become: yes
  ufw:
    rule: allow
    port: '123'
    proto: udp
    direction: '{{ item }}'
  loop:
    - in
    - out

- name: Allow DHCP incoming/outgoing traffic
  become: yes
  ufw:
    rule: allow
    port: '68'
    proto: udp
    direction: '{{ item }}'
  loop:
    - in
    - out

- name: Allow IRC SSL outgoing traffic
  become: yes
  ufw:
    rule: allow
    port: '"{{ item }}"'
    proto: tcp
    direction: out
  loop:
    - 6697
    - 7000
    - 7070

- name: Allow DNS outgoing traffic
  become: yes
  ufw:
    rule: allow
    port: '53'
    proto: '{{ item }}'
    direction: out
  loop:
    - tcp
    - udp

- name: Allow HTTP outgoing traffic
  become: yes
  ufw:
    rule: allow
    port: '80'
    proto: tcp
    direction: out

- name: Allow HTTPS outgoing traffic
  become: yes
  ufw:
    rule: allow
    port: '443'
    proto: tcp
    direction: out

- name: Allow SSH outgoing traffic
  become: yes
  ufw:
    rule: allow
    port: '22'
    proto: tcp
    direction: out

- name: Allow Mullvad OpenVPN outgoing traffic
  become: yes
  ufw:
    rule: allow
    port: '{{ item.port }}'
    proto: '{{ item.proto }}'
    direction: out
  loop:
    - {port: 1401, proto: tcp}
    - {port: 1194, proto: udp}
    - {port: 1195, proto: udp}
    - {port: 1196, proto: udp}
    - {port: 1197, proto: udp}
    - {port: 1301, proto: udp}
    - {port: 1301, proto: udp}
    - {port: 1302, proto: udp}
    - {port: 1303, proto: udp}
    - {port: 1400, proto: udp}

- name: Enable ufw logging
  become: yes
  ufw:
    logging: low

- name: Enable ufw with default incoming deny policy
  become: yes
  ufw:
    state: enabled
    policy: deny
    direction: incoming

- name: Enable ufw with default outgoing deny policy
  become: yes
  ufw:
    state: enabled
    policy: deny
    direction: outgoing

- name: Enable login 2FA with YubiKey
  become: yes
  lineinfile:
    path: '{{ item }}'
    regex: '^auth .+ pam_u2f.so .+'
    insertafter: '^auth .+'
    line: 'auth required pam_u2f.so authfile=/etc/u2f_mappings nouserok'
  when:
    - (user_pam_u2f_main_key is defined) and (user_pam_u2f_main_key|length > 0)
    - (user_pam_u2f_backup_key is defined) and (user_pam_u2f_backup_key|length > 0)
  loop:
    - /etc/pam.d/system-local-login
    - /etc/pam.d/lightdm

- name: Ensure pacman hooks directory exist
  become: yes    
  file:
    path: /etc/pacman.d/hooks
    state: directory
    owner: root
    group: root
    mode: '0755'

# Ref: https://github.com/i3/i3lock/issues/198
- name: Add pacman hooks for the i3lock U2F PAM workaround
  become: yes
  copy:
    src: 'etc/pacman.d/hooks/{{ item }}'
    dest: '/etc/pacman.d/hooks/{{ item }}'
    owner: root
    group: root
    mode: '0644'
  loop:
    - 90-i3lock-u2f-pam-workaround.hook

- name: i3lock U2F PAM workaround
  become: yes
  file:
    path: /usr/bin/i3lock
    mode: u+s

- name: Enable i3lock 2FA with YubiKey
  become: yes
  lineinfile:
    path: /etc/pam.d/i3lock
    regex: '^auth .+ pam_u2f.so .+'
    insertbefore: '^auth .+'
    line: 'auth required pam_u2f.so authfile=/etc/u2f_mappings nouserok'
  when:
    - (user_pam_u2f_main_key is defined) and (user_pam_u2f_main_key|length > 0)
    - (user_pam_u2f_backup_key is defined) and (user_pam_u2f_backup_key|length > 0)

- name: Enable passwordless sudo with YubiKey
  become: yes
  lineinfile:
    path: /etc/pam.d/sudo
    firstmatch: yes
    insertbefore: '^auth'
    regex: '^auth .+ pam_u2f.so .+'
    line: 'auth sufficient pam_u2f.so authfile=/etc/u2f_mappings'
  when:
    - (user_pam_u2f_main_key is defined) and (user_pam_u2f_main_key|length > 0)
    - (user_pam_u2f_backup_key is defined) and (user_pam_u2f_backup_key|length > 0)

- name: Add U2F key mapping for user
  become: yes
  lineinfile:
    path: /etc/u2f_mappings
    line: '{{ user_name }}:{{ user_pam_u2f_main_key }}:{{ user_pam_u2f_backup_key }}'
    mode: '0400'
    create: yes
  when:
    - (user_pam_u2f_main_key is defined) and (user_pam_u2f_main_key|length > 0)
    - (user_pam_u2f_backup_key is defined) and (user_pam_u2f_backup_key|length > 0)

- name: Disable YubiKey support for system-auth
  become: yes
  lineinfile:
    state: absent
    path: '{{ item }}'
    regex: '^auth .+ pam_u2f.so'
  loop:
    - /etc/pam.d/sudo
    - /etc/pam.d/system-local-login
  when:
    - not (user_pam_u2f_main_key is defined) and (user_pam_u2f_main_key|length > 0)
    - not (user_pam_u2f_backup_key is defined) and (user_pam_u2f_backup_key|length > 0)

- name: Disable i3lock 2FA with YubiKey
  become: yes
  lineinfile:
    state: absent
    regex: '^auth .+ pam_u2f.so .+'
    path: /etc/pam.d/i3lock
  when:
    - not (user_pam_u2f_main_key is defined) and (user_pam_u2f_main_key|length > 0)
    - not (user_pam_u2f_backup_key is defined) and (user_pam_u2f_backup_key|length > 0)

- name: Remove U2F key mapping file for user
  become: yes
  lineinfile:
    state: absent
    regex: '^{{ user_name }}:.+'
    path: /etc/u2f_mappings
  when:
    - not (user_pam_u2f_main_key is defined) and (user_pam_u2f_main_key|length > 0)
    - not (user_pam_u2f_backup_key is defined) and (user_pam_u2f_backup_key|length > 0)

- name: Configure udev to lock screen when YubiKey is removed
  become: yes
  copy:
    src: '{{ item }}'
    dest: '/{{ item }}'
    owner: root
    group: root
    mode: '0644'
  loop:
    - etc/udev/rules.d/90-yubikey.rules
