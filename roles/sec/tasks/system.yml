---

- name: Set ufw default forward policy
  ansible.builtin.lineinfile:
    path: /etc/default/ufw
    regex: '^DEFAULT_FORWARD_POLICY='
    line: 'DEFAULT_FORWARD_POLICY="ACCEPT"'

- name: Enable services
  ansible.builtin.service:
    name: '{{ item }}'
    state: started
    enabled: true
  loop:
    - pcscd
    - tor
    - ufw

- name: Allow outgoing ICMP traffic (IPv4) in ufw
  ansible.builtin.lineinfile:
    path: /etc/ufw/before.rules
    insertbefore: '^COMMIT'
    line: '{{ item }}'
  loop:
    - '-A ufw-before-input  -p icmp -m state --state ESTABLISHED,RELATED     -j ACCEPT'
    - '-A ufw-before-output -p icmp -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT'

- name: Allow DNS outgoing traffic
  community.general.ufw:
    rule: allow
    port: '53'
    proto: udp
    direction: out

- name: Allow mDNS outgoing traffic
  community.general.ufw:
    rule: allow
    port: '5353'
    proto: udp
    direction: out

- name: Allow mDNS incoming traffic
  community.general.ufw:
    rule: allow
    port: '5353'
    proto: udp
    direction: in

- name: Allow WHOIS outgoing traffic
  community.general.ufw:
    rule: allow
    port: '43'
    proto: tcp
    direction: out

- name: Allow NTP incoming/outgoing traffic
  community.general.ufw:
    rule: allow
    port: '123'
    proto: udp
    direction: '{{ item }}'
  loop:
    - in
    - out

- name: Allow DHCP incoming/outgoing traffic
  community.general.ufw:
    rule: allow
    port: '68'
    proto: udp
    direction: '{{ item }}'
  loop:
    - in
    - out

- name: Allow IRC SSL outgoing traffic
  community.general.ufw:
    rule: allow
    port: '"{{ item }}"'
    proto: tcp
    direction: out
  loop:
    - 6697
    - 7000
    - 7070

- name: Allow DNS-over-TLS outgoing traffic
  community.general.ufw:
    rule: allow
    port: '853'
    proto: '{{ item }}'
    direction: out
  loop:
    - tcp

- name: Allow HTTP outgoing traffic
  community.general.ufw:
    rule: allow
    port: '80'
    proto: tcp
    direction: out

- name: Allow HTTPS outgoing traffic
  community.general.ufw:
    rule: allow
    port: '443'
    proto: tcp
    direction: out

- name: Allow SSH incoming traffic
  community.general.ufw:
    rule: allow
    port: '22'
    proto: tcp
    direction: in
  when:
    - user_name == "vagrant"

- name: Allow SSH outgoing traffic
  community.general.ufw:
    rule: allow
    port: '22'
    proto: tcp
    direction: out

- name: Allow Git protocol traffic
  community.general.ufw:
    rule: allow
    port: '9418'
    proto: tcp
    direction: out

- name: Allow Tor outgoing traffic
  community.general.ufw:
    rule: allow
    port: '9001'
    proto: tcp
    direction: out

- name: Allow OpenVPN outgoing traffic
  community.general.ufw:
    rule: allow
    port: '{{ item.port }}'
    proto: '{{ item.proto }}'
    direction: out
  loop:
    - {port: 1401, proto: tcp}
    - {port: 1194, proto: udp}
    - {port: 1195, proto: udp}
    - {port: 1196, proto: udp}
    - {port: 1197, proto: udp}
    - {port: 1198, proto: udp}
    - {port: 1301, proto: udp}
    - {port: 1302, proto: udp}
    - {port: 1303, proto: udp}
    - {port: 1400, proto: udp}

- name: Allow syncthing input traffic
  community.general.ufw:
    rule: allow
    port: '{{ item.port }}'
    proto: '{{ item.proto }}'
    direction: in
  loop:
    - {port: 22000, proto: tcp}
    - {port: 22000, proto: udp}
    - {port: 21027, proto: udp}

- name: Allow syncthing output traffic
  community.general.ufw:
    rule: allow
    port: '{{ item.port }}'
    proto: '{{ item.proto }}'
    direction: out
  loop:
    - {port: 8384, proto: tcp}
    - {port: 22000, proto: tcp}
    - {port: 22000, proto: udp}
    - {port: 21027, proto: udp}

- name: Enable ufw logging
  community.general.ufw:
    logging: low

- name: Enable ufw with default incoming deny policy
  community.general.ufw:
    state: enabled
    policy: deny
    direction: incoming

- name: Enable ufw with default outgoing deny policy
  community.general.ufw:
    state: enabled
    policy: deny
    direction: outgoing

- name: Enable login 2FA with YubiKey
  ansible.builtin.lineinfile:
    path: '{{ item }}'
    regex: '^auth .+ pam_u2f.so .+'
    insertafter: '^auth .+'
    line: 'auth required pam_u2f.so authfile=/etc/u2f_mappings nouserok'
  when: |
    (user_pam_u2f_key_handles is defined) and
    (user_pam_u2f_key_handles|length > 0)
  loop:
    - /etc/pam.d/system-local-login
    - /etc/pam.d/lightdm

- name: Ensure pacman hooks directory exist
  ansible.builtin.file:
    path: /etc/pacman.d/hooks
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Enable passwordless sudo with YubiKey
  ansible.builtin.lineinfile:
    path: /etc/pam.d/sudo
    firstmatch: true
    insertbefore: '^auth'
    regex: '^auth .+ pam_u2f.so .+'
    line: 'auth sufficient pam_u2f.so authfile=/etc/u2f_mappings'
  when: |
    (user_pam_u2f_key_handles is defined) and
    (user_pam_u2f_key_handles|length > 0)

- name: Add U2F key mapping for user
  ansible.builtin.lineinfile:
    path: /etc/u2f_mappings
    line: '{{ user_name }}{{ user_pam_u2f_key_handles }}'
    regexp: '^{{ user_name }}.+'
    mode: '0400'
    create: true
  when: |
    (user_pam_u2f_key_handles is defined) and
    (user_pam_u2f_key_handles|length > 0)

- name: Disable YubiKey support for system-auth
  ansible.builtin.lineinfile:
    state: absent
    path: '{{ item }}'
    regex: '^auth .+ pam_u2f.so'
  loop:
    - /etc/pam.d/sudo
    - /etc/pam.d/system-local-login
  when: |
    not (user_pam_u2f_key_handles is defined) and
    (user_pam_u2f_key_handles|length > 0)

- name: Remove U2F key mapping file for user
  ansible.builtin.lineinfile:
    state: absent
    regex: '^{{ user_name }}.+'
    path: /etc/u2f_mappings
  when: |
    not (user_pam_u2f_key_handles is defined) and
    (user_pam_u2f_key_handles|length > 0)

- name: Setup OpenVPN client configuration exists
  ansible.builtin.copy:
    src: 'etc/openvpn/client/client.conf'
    dest: '/etc/openvpn/client/client.conf'
    owner: 'root'
    group: 'root'
    mode: '0600'
