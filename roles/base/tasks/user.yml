---

- name: Ensure {{ user_group }} group exists
  ansible.builtin.group:
    name: '{{ user_group }}'
    state: present
    gid: '{{ user_gid }}'

- name: Ensure {{ user_name }} user exists
  ansible.builtin.user:
    name: '{{ user_name }}'
    groups:
      - '{{ user_group }}'
      - audio
      - network
      - power
      - rfkill
      - sys
      - video
      - wheel
    append: true
    group: '{{ user_group }}'
    uid: '{{ user_uid }}'
    shell: '/bin/zsh'

- name: Ensure the .ssh directory exists
  become_user: '{{ user_name }}'
  ansible.builtin.file:
    path: '/home/{{ user_name }}/.ssh'
    state: directory
    owner: '{{ user_name }}'
    group: '{{ user_group }}'
    mode: '0700'

- name: Ensure the existence of a SSH keypair
  become_user: '{{ user_name }}'
  community.crypto.openssh_keypair:
    path: '/home/{{ user_name }}/.ssh/id_rsa'
  when:
    - user_create_ssh_keypair|bool

- name: Ensure extra home directories exist
  become_user: '{{ user_name }}'
  ansible.builtin.file:
    path: '/home/{{ user_name }}/{{ item }}'
    state: directory
    owner: '{{ user_name }}'
    group: '{{ user_group }}'
    mode: '0755'
  loop: '{{ user_extra_home_dirs }}'

- name: Ensure the required hidden directories exist
  become_user: '{{ user_name }}'
  ansible.builtin.file:
    path: '/home/{{ user_name }}/{{ item }}'
    state: directory
    owner: '{{ user_name }}'
    group: '{{ user_group }}'
    mode: '0755'
  loop:
    - .config
    - .bin

- name: Ensure bash directories exist
  become_user: '{{ user_name }}'
  ansible.builtin.file:
    path: '/home/{{ user_name }}/{{ item }}'
    state: directory
    owner: '{{ user_name }}'
    group: '{{ user_group }}'
    mode: '0755'
  loop:
    - .bash_aliases.d
    - .bash_env.d
    - .bash_completions.d

- name: Ensure bash configuration files exist
  become_user: '{{ user_name }}'
  ansible.builtin.copy:
    src: 'home/{{ item }}'
    dest: '/home/{{ user_name }}/'
    owner: '{{ user_name }}'
    group: '{{ user_group }}'
    mode: '0644'
  loop:
    - .bash_logout
    - .bash_profile
    - .bashrc

- name: Ensure extra user services are enabled and started
  become_user: '{{ user_name }}'
  ansible.builtin.systemd:
    scope: user
    name: '{{ item }}'
    state: started
    enabled: true
  loop: '{{ extra_enabled_user_services }}'
  when: extra_enabled_user_services|length > 0
